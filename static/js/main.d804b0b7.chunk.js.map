{"version":3,"sources":["components/images/userMenuUp.svg","components/images/userMenuDown.svg","components/button/Button.jsx","components/input/Input.jsx","components/tableElement/TableElement.jsx","components/table/Table.jsx","components/dropdown/Dropdown.jsx","components/listItem/ListItem.jsx","components/column/Column.jsx","components/header/Header.jsx","components/pageColumn/PageColumn.jsx","components/footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","value","onClick","className","id","type","Input","this","props","style","onChange","onKeyPress","autoFocus","React","Component","TableElement","taskName","deleteTableElement","Table","tasks","title","map","task","index","name","key","Dropdown","idDropdown","ListItem","classNameListItem","date","Column","addTaskToEnter","event","onClickBtnSubmit","state","onChangeInput","onClickBtn","onClickDropdown","onClickListItem","listItemColumn","flagAddButton","find","enabledInput","inputValue","enabledBtnSubmit","enabledDropdown","nameDropdown","enabledListItem","nameListItem","Header","onClickAvatar","setState","clicked","handleClickOutside","target","alt","document","addEventListener","removeEventListener","src","userMenuUp","userMenuDown","PageColumn","tasksDescription","taskId","bind","onClickCloseBtn","textareaHandleChange","to","defaultValue","description","toLowerCase","replace","Footer","activeTasks","reduce","sum","finishedTasks","App","textAreaValue","idElem","splice","forEach","item","showPageColumn","namePageColumn","onClickTitle","textContent","Date","toUTCString","alert","enableAddButton","nameAddButton","oldTasks","JSON","parse","localStorage","getItem","saveTasks","stringify","setItem","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d804b0b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/userMenuUp.3627788a.svg\";","module.exports = __webpack_public_path__ + \"static/media/userMenuDown.fe068a57.svg\";","import React from 'react';\r\n\r\nconst Button = ({value, onClick, className, id}) => {\r\n    return <input className={`button ${className}`} \r\n        type='button'\r\n        id={id}\r\n        value={value}\r\n        onClick={onClick}\r\n    />\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n \r\nclass Input extends React.Component {\r\n    render () {\r\n        const {value, style, onChange, className, onKeyPress} = this.props;\r\n\r\n        return <input\r\n            type=\"text\"\r\n            value={value}\r\n            style={style}\r\n            onChange={onChange}\r\n            className={`input ${className}`}\r\n            onKeyPress={onKeyPress}\r\n            autoFocus={true}\r\n        />\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport Button from '../button/Button'\r\nimport './style.css'\r\n\r\nconst TableElement = ({taskName, id, deleteTableElement}) => {\r\n    return <div className=\"tableElement\">  \r\n        <div className=\"\" id={id}>\r\n            <p>{taskName}</p>\r\n        </div>\r\n        <Button\r\n            className=\"delTaskFromTable\"\r\n            value=\"\"\r\n            id={id}\r\n            onClick={deleteTableElement}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default TableElement;","import React from 'react';\r\nimport TableElement from '../tableElement/TableElement';\r\n\r\nclass Table extends React.Component {\r\n    render() {\r\n        const {tasks, title, deleteTableElement} = this.props;\r\n\r\n        return <div className=\"table\">\r\n            {tasks.map((task, index)=> {\r\n                if (task.title === title) {\r\n                    return <TableElement\r\n                        taskName={task.name}\r\n                        key={index}\r\n                        id={index}\r\n                        deleteTableElement={deleteTableElement}\r\n                    />\r\n                } else return null;\r\n            })}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nconst Dropdown = ({onClick, className, idDropdown,}) => {\r\n    return <div className={className}\r\n            onClick={onClick}\r\n            id={idDropdown} > \r\n    </div>\r\n}\r\n \r\nexport default Dropdown;","import React from 'react';\r\n\r\nconst ListItem = ({taskName, onClick, id, classNameListItem, date}) => {\r\n    return <div className=\"ListItem\">\r\n            <p id={id} className={classNameListItem} onClick={onClick}>{taskName}</p>\r\n            {date && <p className =\"date_string\">task create : {date}</p>}     \r\n    </div>\r\n}\r\n\r\nexport default ListItem;","import React, { Fragment } from 'react';\r\nimport Button from '../button/Button';\r\nimport Input from '../input/Input';\r\nimport Table from '../table/Table';\r\nimport Dropdown from '../dropdown/Dropdown';\r\nimport ListItem from '../listItem/ListItem';\r\n\r\nclass Column extends React.Component {    \r\n    addTaskToEnter = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.props.onClickBtnSubmit()\r\n        }  \r\n    }\r\n\r\n    render() {\r\n        const {\r\n            state,\r\n            onChangeInput,\r\n            onClickBtn,\r\n            onClickBtnSubmit,\r\n            deleteTableElement,\r\n            title,\r\n            onClickDropdown,\r\n            onClickListItem,\r\n            idDropdown,\r\n            listItemColumn,\r\n            classNameListItem\r\n        } = this.props;\r\n        const flagAddButton = state.tasks.find(task => task.title === listItemColumn)\r\n                \r\n        return <Fragment >\r\n            <Table\r\n                title={title}\r\n                tasks={state.tasks}\r\n                deleteTableElement={deleteTableElement}\r\n            />\r\n            { title === \"backlog\" ?\r\n            <Fragment>\r\n                <Input className={state.enabledInput ? 'inputOn' : \"inputOff\"}\r\n                    value={state.inputValue}\r\n                    onChange={onChangeInput}\r\n                    onKeyPress={this.addTaskToEnter}\r\n                />\r\n                \r\n                <div className=\"buttonBox\">\r\n                    <Button\r\n                        className=\"addTask\"\r\n                        value=\"+Add card\"\r\n                        id = \"backlog\"\r\n                        type=\"backlog\"\r\n                        onClick = {onClickBtn}\r\n                    />\r\n\r\n                    <Button\r\n                        className={state.enabledBtnSubmit ? 'btnSubmitOn' : \"btnSubmitOff\"}\r\n                        value=\"Submit\"\r\n                        onClick ={onClickBtnSubmit}\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <Dropdown\r\n                        idDropdown ={idDropdown}\r\n                        className={state.enabledDropdown && state.nameDropdown === title ? 'dropdownOn' : \"dropdownOff\"}\r\n                        onClick ={onClickDropdown}\r\n                    />\r\n                            \r\n                <div className={state.enabledListItem && state.nameListItem === idDropdown ? 'listItemOn' : \"listItemOff\"}>                     \r\n                    {state.tasks.map((task, index)=> {\r\n                        if (task.title === listItemColumn) {\r\n                            return (\r\n                                <ListItem \r\n                                    taskName={task.name}\r\n                                    key={index}\r\n                                    id={index}\r\n                                    onClick={onClickListItem}\r\n                                    classNameListItem={classNameListItem}\r\n                                />\r\n                            ) \r\n                        } else return null; \r\n                    } )}   \r\n                </div>\r\n\r\n                <div className=\"buttonBox\">\r\n                    <Button\r\n                        className={flagAddButton ? \"addTask\" : \"addTask addTaskOff\"}\r\n                        value=\"+Add card\"\r\n                        onClick ={onClickBtn}\r\n                        id = {title}\r\n                    /> \r\n                </div>\r\n                </Fragment>  \r\n            }\r\n        </Fragment>\r\n    }\r\n}\r\n\r\nexport default Column;","import React from 'react';\r\nimport userMenuUp from '../images/userMenuUp.svg';\r\nimport userMenuDown from '../images/userMenuDown.svg';\r\n\r\nclass Header extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            clicked: false,\r\n        }\r\n    }\r\n\r\n    onClickAvatar = () => {\r\n        this.setState ({\r\n            clicked: !this.state.clicked,\r\n        });\r\n    }\r\n\r\n    handleClickOutside = (event) => {   \r\n        if (!event.target.alt) {\r\n            this.setState({\r\n                clicked: false\r\n            });\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    render() {\r\n        const {clicked} = this.state;\r\n\r\n        return <div className=\"headerConteiner\">\r\n            <h1>Awesome Kanban Board</h1>\r\n            <div className=\"headerConteinerBlock\">\r\n                {clicked ? \r\n                    <img onClick={this.onClickAvatar} src={userMenuUp} alt={\"avatar\"}/>\r\n                    :\r\n                    <img onClick={this.onClickAvatar} src={userMenuDown} alt={\"avatar\"} />  \r\n                }\r\n                {clicked ? \r\n                    <div className='dropDownMenu'>\r\n                        <ul>\r\n                            <li className='dropDownMenu_menuItem'>Profile</li>\r\n                            <li className='dropDownMenu_menuItem'>Log out</li>\r\n                        </ul>\r\n                    </div>\r\n                : null }           \r\n            </div>   \r\n        </div> \r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport ListItem from '../listItem/ListItem';\r\nimport Button from '../button/Button';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nclass PageColumn extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            tasksDescription: false,\r\n            taskId: '',\r\n        }\r\n        this.onClickListItem = this.onClickListItem.bind(this);\r\n        this.onClickCloseBtn = this.onClickCloseBtn.bind(this);\r\n    }\r\n\r\n    onClickListItem (event) {\r\n        const taskId = event.target.id;\r\n        this.setState({\r\n            tasksDescription: true,\r\n            taskId: taskId\r\n        });\r\n    }\r\n\r\n    onClickCloseBtn () {\r\n        this.setState({\r\n            tasksDescription: false,\r\n        });\r\n    }\r\n\r\n    render () {\r\n        const {title, tasks, onClickBtn, onClickBtnSubmit, textareaHandleChange} = this.props;\r\n        const {tasksDescription, taskId}= this.state;\r\n        \r\n        return <div className =\"pageColumn\">   \r\n            <h1>{title}</h1>\r\n            <Link to=\"/\"><Button\r\n                    value = \"X\"\r\n                    className = \"closeBtnPageColumn\"\r\n                    onClick = {onClickBtn}\r\n                    id = \"btnClosePageColumn\"\r\n            /> </Link> \r\n            {tasksDescription ?\r\n                <div className=\"pageColumn_task\">\r\n                    <h2>{tasks[taskId].name}</h2>\r\n                    <p>task created: {tasks[taskId].date}</p> \r\n                    <textarea\r\n                        defaultValue = {tasks[taskId].description}\r\n                        onChange={textareaHandleChange}\r\n                        id={this.state.taskId}\r\n                        className=\"pageColumnTask_textarea\"\r\n                      \r\n                    />\r\n                    <div className=\"buttonBox\">                   \r\n                        <Button \r\n                            value = \"Submit\"\r\n                            onClick ={onClickBtnSubmit}\r\n                            id={this.state.taskId}\r\n                        />\r\n                        <Button \r\n                            value = \"Close\"\r\n                            onClick ={this.onClickCloseBtn}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                 :\r\n                <div>\r\n                    {tasks.map((task, index)=> {\r\n                        if (task.title === title.toLowerCase().replace(/\\s/,'')) {\r\n                            return <ListItem \r\n                                    taskName={task.name}\r\n                                    key={index}\r\n                                    id={index}\r\n                                    onClick={this.onClickListItem}\r\n                                    className=\"listItemPageColumn\"\r\n                                    date = {task.date}\r\n                            />\r\n                        } else return null; \r\n                    })}\r\n                </div>\r\n            } \r\n        </div>\r\n    }\r\n}\r\n\r\nexport default PageColumn;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render () {\r\n        const {tasks} = this.props;\r\n        const activeTasks = tasks.reduce((sum, task) => {\r\n            if (task.title === \"backlog\") {\r\n                return sum + 1\r\n            } else return sum\r\n        }, 0);\r\n\r\n        const finishedTasks = tasks.reduce((sum, task) => {\r\n            if (task.title === \"finished\") {\r\n                return sum + 1\r\n            } else return sum\r\n        }, 0);\r\n        \r\n        return <div className=\"footerWrapper\">\r\n            <div className=\"footerCountValueBlock\">\r\n                <div> Active tasks: {activeTasks}</div>\r\n                <div> Finished tasks: {finishedTasks}</div>\r\n            </div>\r\n            <div className=\"footerWrapper_author\">Kanban board by Artem Yanin, 2020</div>\r\n        </div>          \r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Column from './components/column/Column';\nimport Header from './components/header/Header';\nimport PageColumn from './components/pageColumn/PageColumn';\nimport Footer from './components/footer/Footer';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch, Link} from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state= {\n      tasks: [],\n      inputValue: '',\n      textAreaValue:'',\n      showPageColumn: false,\n      namePageColumn:'',\n      enabledDropdown: false,\n      enabledListItem: false,\n      enableAddButton: false,\n      enabledInput: false,\n      enabledBtnSubmit: false,\n      nameAddButton: '',\n      nameDropdown: '',\n      nameListItem: '',\n      activeTasks: 0,\n      finishedTasks: 0,\n    }\n  }\n\n  componentDidMount () {\n    const oldTasks = JSON.parse(localStorage.getItem('tasks'));\n    if (oldTasks) {\n      this.setState ({\n        tasks: oldTasks,\n      });\n    }\n  }\n  \n  onChangeInput = (event) => {\n    this.setState({\n        inputValue: event.target.value,\n        enabledBtnSubmit: true,\n    })\n  }\n\n  textareaHandleChange = (event) => {\n    this.setState({\n      textAreaValue: event.target.value\n    });\n  }\n\n  deleteTableElement = (event) => {\n    const idElem = event.target.id;\n    this.state.tasks.splice(+idElem, 1);\n    this.setState({\n      tasks: this.state.tasks,\n    });\n  }\n\n  componentDidUpdate () {\n    const saveTasks = JSON.stringify(this.state.tasks);\n    localStorage.setItem('tasks', saveTasks);\n  }\n\n  onClickBtn =(event) => {\n    const {tasks} = this.state;\n    if (event.target.id === \"backlog\") {\n      this.setState({\n        enabledInput: true,\n      });\n    } if (event.target.id === \"ready\") {\n      tasks.forEach ((item) => {\n        if (item.title === \"backlog\") {\n          this.setState ({\n            enabledDropdown: true,\n            nameDropdown: \"ready\",\n          });\n        } \n      });\n    } if (event.target.id === \"inprogress\") {\n      tasks.forEach((item) => {\n        if(item.title === \"ready\") {\n          this.setState({\n            enabledDropdown: true,\n            nameDropdown: \"inprogress\",\n          });\n        }\n      });\n    } if (event.target.id === \"finished\") {\n      tasks.forEach((item) => {\n        if(item.title === \"inprogress\") {\n          this.setState({\n            enabledDropdown: true,\n            nameDropdown: \"finished\",\n          });\n        }\n      });\n    } if (event.target.id === \"btnClosePageColumn\"){\n      this.setState ({\n        showPageColumn: false,\n        namePageColumn: '',\n      });\n    } else return null;\n  }\n\n  onClickTitle = (event) => {\n    const name = event.target.textContent;\n    this.setState({\n      showPageColumn: true,\n      namePageColumn: name,\n    });\n  }\n\n  onClickDropdown = (event) => {\n    this.setState({\n      enabledListItem: true,\n      nameListItem: event.target.id,\n    });        \n  }\n\n  onClickListItem =(event) => {\n    const {tasks} = this.state;\n    const index = event.target.id;\n    const className=event.target.className;\n    tasks.map((task, id) => {\n      if (id === +index && task.title === \"backlog\" && className === \"listItemReady\") {\n        task.title = \"ready\";\n        return null;\n      } if (id === +index && task.title === \"ready\" && className === \"listItemInprogress\") {\n        task.title = \"inprogress\";\n        return null;\n      } if (id === +index && task.title === \"inprogress\" && className === \"listItemFinished\" ){\n        task.title = \"finished\";\n        return null;\n      } else return null;\n    }); \n    \n    this.setState({\n      tasks: tasks,\n      enabledListItem: false,\n      enabledDropdown: false,  \n    });\n  }\n\n  onClickBtnSubmit = (event) => {\n    const {inputValue, tasks, textAreaValue} = this.state;\n    const id = event.target.id;\n    const date = new Date().toUTCString();\n    if (id) {\n      tasks.map((task, index) => {\n        if (+id === index) {\n          task.description = textAreaValue;\n          this.setState({\n            textAreaValue: ''\n          });\n          return alert('Сохранено');\n        } else return null;\n      });\n    } else {\n      this.setState({\n        tasks: [...tasks, {title: \"backlog\", name: inputValue, description: '', date: date, } ],\n        inputValue: '',\n        enabledInput: false,\n        enabledBtnSubmit: false,\n        enabledDropdown: false,   \n      });\n    }\n  }\n\n  render() {\n    return <div className=\"wrapper\">\n      <header className=\"header\">\n        <Header />\n      </header>\n      <Router>         \n        <Switch>\n         <Route path=\"/backlog\">\n            <PageColumn\n              textareaHandleChange = {this.textareaHandleChange}\n              title = \"Backlog\"\n              tasks={this.state.tasks}\n              onClickBtn={this.onClickBtn}\n              onClickBtnSubmit = {this.onClickBtnSubmit}\n            />  \n          </Route>\n          <Route path=\"/ready\">\n            <PageColumn\n              textareaHandleChange = {this.textareaHandleChange}\n              title = \"Ready\"\n              tasks={this.state.tasks}\n              onClickBtn={this.onClickBtn}\n              onClickBtnSubmit = {this.onClickBtnSubmit}\n            /> \n          </Route>\n          <Route path=\"/inprogress\">\n            <PageColumn\n              textareaHandleChange = {this.textareaHandleChange}\n              title = \"In Progress\"\n              tasks={this.state.tasks}\n              onClickBtn={this.onClickBtn}\n              onClickBtnSubmit = {this.onClickBtnSubmit}\n            /> \n          </Route>\n          <Route path=\"/finished\">\n            <PageColumn\n              textareaHandleChange = {this.textareaHandleChange}\n              title = \"Finished\"\n              tasks={this.state.tasks}\n              onClickBtn={this.onClickBtn}\n              onClickBtnSubmit = {this.onClickBtnSubmit}\n            /> \n          </Route> \n          <Route path=\"/\" exact>\n            <div className=\"conteiner\">\n              <div className=\"block\">\n              <Link className=\"activeLink\" to=\"/backlog\"><h1>Backlog</h1></Link>\n                <Column\n                  state={this.state}\n                  title=\"backlog\"\n                  onClickBtn={this.onClickBtn}\n                  onClickBtnSubmit={this.onClickBtnSubmit}\n                  onChangeInput={this.onChangeInput}\n                  deleteTableElement={this.deleteTableElement}\n                />\n              </div>\n              <div className=\"block\">\n              <Link className=\"activeLink\" to=\"/ready\"><h1>Ready</h1></Link>\n                <Column\n                  title=\"ready\"\n                  idDropdown =\"dropdownReady\"\n                  listItemColumn=\"backlog\"\n                  classNameListItem=\"listItemReady\"\n                  state={this.state}\n                  onClickBtn = {this.onClickBtn}\n                  onClickDropdown = {this.onClickDropdown}\n                  onClickListItem = {this.onClickListItem}\n                  deleteTableElement={this.deleteTableElement}\n                />\n              </div>\n              <div className=\"block\">\n              <Link className=\"activeLink\" to=\"/inprogress\"><h1>In Progress</h1></Link>\n                <Column\n                  title=\"inprogress\"\n                  idDropdown=\"dropdownInProgress\"\n                  listItemColumn=\"ready\"\n                  classNameListItem=\"listItemInprogress\"\n                  state={this.state}\n                  onClickBtn = {this.onClickBtn}\n                  onClickDropdown = {this.onClickDropdown}\n                  onClickListItem = {this.onClickListItem}\n                  deleteTableElement={this.deleteTableElement}\n                />\n              </div>\n              <div className=\"block\">\n              <Link className=\"activeLink\" to=\"/finished\"><h1>Finished</h1></Link>\n                <Column\n                    title=\"finished\"\n                    idDropdown=\"dropdownFinished\"\n                    listItemColumn=\"inprogress\"\n                    classNameListItem=\"listItemFinished\"\n                    state={this.state}\n                    onClickBtn = {this.onClickBtn}\n                    onClickDropdown = {this.onClickDropdown}\n                    onClickListItem = {this.onClickListItem}\n                    deleteTableElement={this.deleteTableElement}\n                  />\n              </div>   \n            </div>\n          </Route>\n        </Switch>\n      </Router>\n      <footer className=\"footer\">\n        <Footer tasks={this.state.tasks}   />\n      </footer>\n    </div>\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}